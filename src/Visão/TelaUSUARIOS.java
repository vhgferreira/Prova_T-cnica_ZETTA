/*
 *  @author Victor
 */
package Visão;

import javax.swing.JOptionPane;
import static prova_zetta.Usuario.usuarios;

/**
 * Inicialização da interface gráfica voltada aos usuários, está bem incompleta.
 * A pesquisa de usuário está bugada. As dificuldades foram explicitadas no
 * código. Contém botões para Procurar por NONE ou CPF, Deletar por NOME ou CPF,
 * E para Cancelar a atividade.
 *
 */
public class TelaUSUARIOS extends javax.swing.JFrame {

    /**
     * Creates new form TelaUSUARIOS
     */
    public TelaUSUARIOS() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botaoPROCURARNOME = new javax.swing.JButton();
        botaoDELETARNOME = new javax.swing.JButton();
        botaoCANCELAR = new javax.swing.JButton();
        TextoCPF = new javax.swing.JTextField();
        TextoNOME = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        botaoPROCURARCPF = new javax.swing.JButton();
        botaoDELETARCPF = new javax.swing.JButton();
        botaoLIMPAR = new javax.swing.JButton();
        FUNDO = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Opções de usuários");
        setResizable(false);
        getContentPane().setLayout(null);

        botaoPROCURARNOME.setText("Procurar por NOME");
        botaoPROCURARNOME.setActionCommand("");
        botaoPROCURARNOME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoPROCURARNOMEActionPerformed(evt);
            }
        });
        getContentPane().add(botaoPROCURARNOME);
        botaoPROCURARNOME.setBounds(30, 160, 150, 40);

        botaoDELETARNOME.setText("Deletar por NOME");
        botaoDELETARNOME.setActionCommand("");
        botaoDELETARNOME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDELETARNOMEActionPerformed(evt);
            }
        });
        getContentPane().add(botaoDELETARNOME);
        botaoDELETARNOME.setBounds(30, 220, 150, 40);

        botaoCANCELAR.setText("Cancelar");
        botaoCANCELAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCANCELARActionPerformed(evt);
            }
        });
        getContentPane().add(botaoCANCELAR);
        botaoCANCELAR.setBounds(410, 100, 110, 40);

        TextoCPF.setToolTipText("");
        getContentPane().add(TextoCPF);
        TextoCPF.setBounds(70, 100, 250, 30);
        getContentPane().add(TextoNOME);
        TextoNOME.setBounds(70, 50, 250, 30);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CPF:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 100, 60, 30);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("NOME:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 50, 60, 30);

        botaoPROCURARCPF.setText("Procurar por CPF");
        botaoPROCURARCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoPROCURARCPFActionPerformed(evt);
            }
        });
        getContentPane().add(botaoPROCURARCPF);
        botaoPROCURARCPF.setBounds(190, 160, 150, 40);

        botaoDELETARCPF.setText("Deletar por CPF");
        botaoDELETARCPF.setActionCommand("");
        botaoDELETARCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDELETARCPFActionPerformed(evt);
            }
        });
        getContentPane().add(botaoDELETARCPF);
        botaoDELETARCPF.setBounds(190, 220, 150, 40);

        botaoLIMPAR.setText("Limpar");
        botaoLIMPAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLIMPARActionPerformed(evt);
            }
        });
        getContentPane().add(botaoLIMPAR);
        botaoLIMPAR.setBounds(410, 40, 110, 40);

        FUNDO.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/Fundo.jpg"))); // NOI18N
        getContentPane().add(FUNDO);
        FUNDO.setBounds(0, 0, 1090, 290);

        setSize(new java.awt.Dimension(588, 315));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botaoCANCELARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCANCELARActionPerformed
        dispose();
    }//GEN-LAST:event_botaoCANCELARActionPerformed

    /**
     * Nos métodos seguintes tentou-se desenvolver uma tabela para apresentação
     * dos dados, porém a falta de experiência me limitaram a seguir em frente,
     * especificamente eu não conseguia enviar os dados do vetor de objetos para
     * o "forms". Decidi então modificar a apresentação para uma tela de aviso.
     *
     *
     */
    private void botaoPROCURARNOMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoPROCURARNOMEActionPerformed
        if (!(TextoNOME.getText().equals("") || !(TextoNOME.getText().matches("[A-Z a-z Çç]{" + TextoNOME.getText().length() + "}")))) {
            for (int i = 0; i < usuarios.size(); ++i) {
                if (usuarios.get(i).getNome().equals(TextoNOME.getText())) {
                    String nome = usuarios.get(i).getNome();
                    String cpf = usuarios.get(i).getCPF();
                    String data = usuarios.get(i).getNascimento();
                    String sexo = usuarios.get(i).getSexo();
                    JOptionPane.showMessageDialog(null, "Nome: " + nome + "\r\nCPF: " + cpf + "\r\nData de nascimento: " + data + "\r\nSexo: " + sexo); //Adiciona na lista as informações do usuário
                } else {
                    JOptionPane.showMessageDialog(null, "Usuário não encontrado!!");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Campo de NOME inválido!!");
        }
    }//GEN-LAST:event_botaoPROCURARNOMEActionPerformed


    private void botaoPROCURARCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoPROCURARCPFActionPerformed
        if ((TextoCPF.getText().length() == 11 && TextoCPF.getText().matches("[0-9]+"))) {
            for (int i = 0; i < usuarios.size(); ++i) {
                if (usuarios.get(i).getCPF().equals(TextoCPF.getText())) {
                    String nome = usuarios.get(i).getNome();
                    String cpf = usuarios.get(i).getCPF();
                    String data = usuarios.get(i).getNascimento();
                    String sexo = usuarios.get(i).getSexo();
                    JOptionPane.showMessageDialog(null, "Nome: " + nome + "\r\nCPF: " + cpf + "\r\nData de nascimento: " + data + "\r\nSexo: " + sexo); //Adiciona na lista as informações do usuário
                    //Adiciona na lista as informações do usuário
                } else {
                    JOptionPane.showMessageDialog(null, "Usuário não encontrado!!");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Campo de CPF inválido!!");
        }
    }//GEN-LAST:event_botaoPROCURARCPFActionPerformed

    private void botaoDELETARNOMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDELETARNOMEActionPerformed
        if (!(TextoNOME.getText().equals("") || !(TextoNOME.getText().matches("[A-Z a-z Çç]{" + TextoNOME.getText().length() + "}")))) {
            for (int i = 0; i < usuarios.size(); ++i) {
                if (usuarios.get(i).getNome().equals(TextoNOME.getText())) {
                    boolean remove = usuarios.remove(usuarios.get(i));
                    if (remove) {
                        JOptionPane.showMessageDialog(null, "Usuário deletado com sucesso!!");
                    } else {
                        JOptionPane.showMessageDialog(null, "Usuário não pode ser deletado!!");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Usuário não encontrado!!");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Campo de NOME inválido!!");
        }
    }//GEN-LAST:event_botaoDELETARNOMEActionPerformed

    private void botaoDELETARCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDELETARCPFActionPerformed
        if ((TextoCPF.getText().length() == 11 && TextoCPF.getText().matches("[0-9]+"))) {
            for (int i = 0; i < usuarios.size(); ++i) {
                if (usuarios.get(i).getCPF().equals(TextoCPF.getText())) {
                    boolean remove = usuarios.remove(usuarios.get(i));
                    if (remove) {
                        JOptionPane.showMessageDialog(null, "Usuário deletado com sucesso!!");
                    } else {
                        JOptionPane.showMessageDialog(null, "Usuário não pode ser deletado!!");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Usuário não encontrado!!");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Campo de CPF inválido!!");
        }
    }//GEN-LAST:event_botaoDELETARCPFActionPerformed

    private void botaoLIMPARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLIMPARActionPerformed
        TextoCPF.setText("");
        TextoNOME.setText("");
    }//GEN-LAST:event_botaoLIMPARActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaUSUARIOS.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaUSUARIOS.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaUSUARIOS.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaUSUARIOS.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaUSUARIOS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel FUNDO;
    private javax.swing.JTextField TextoCPF;
    private javax.swing.JTextField TextoNOME;
    private javax.swing.JButton botaoCANCELAR;
    private javax.swing.JButton botaoDELETARCPF;
    private javax.swing.JButton botaoDELETARNOME;
    private javax.swing.JButton botaoLIMPAR;
    private javax.swing.JButton botaoPROCURARCPF;
    private javax.swing.JButton botaoPROCURARNOME;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
